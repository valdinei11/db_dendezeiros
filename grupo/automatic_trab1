1- Pesquise a fim de conhecer e determinar o que é banco de dados hierárquico, rede, relacional, objeto-relacional e objeto.
Banco de dados Hierárquico:
Um Banco de dados hierárquico consiste em uma coleção de registros que são conectados uns aos outros por meio de ligações. Um registro é uma coleção de campos, cada qual contendo apenas um valor de dados. Uma ligação é uma associação entre exatamente dois registros. O modelo hierárquico é, portanto similar ao modelo de rede, no sentido de que dados e relacionamentos entre dados são também representados por registros e ligações, respectivamente. O modelo hierárquico difere do modelo de rede na organização de registros como coleção de árvores em vez de como grafos arbitrários.

Banco de dados Rede:
Sua organização é semelhante à dos Bancos de Dados hierárquicos, É o modelo de dados que eliminou o conceito de hierarquia, permitindo que um mesmo registro estivesse envolvido em várias associações, registro filho pode ser ligado a mais de um registro pai, criando conexões bastante complexas e são bastante utilizados em sistemas para computadores de grande porte (mainframe). Sendo que esse modelo é composto de uma estrutura mais completa, possui as propriedades básicas de registros, conjuntos e ocorrências, e utiliza a linguagem de definição (DDL) e a linguagem de manipulação de dados (DML), além de permitir evolução mais eficiente do modelo. A estrutura é formada de entidade (registros), atributos (itens de dados), tipo de registro e ocorrência do registro. Tanto o modelo hierárquico quanto o de rede são chamados de sistemas de navegação, pois as aplicações devem ser construídas para atravessar um conjunto de registros interligados previamente

Banco de dados Relacional:
Um banco de dados relacional é um banco de dados que modela os dados de uma forma que eles sejam percebidos pelo usuário como tabelas, ou mais formalmente relações.
O termo é aplicado aos próprios dados, quando organizados dessa forma, ou a um Sistema Gerenciador de Banco de Dados Relacional (SGBDR) – do inglês Relacional database management system (RDBMS) – um programa de computador que implementa a abstração.
Banco de dados Objeto-relacional:
Banco de dados objeto-relacional é um sistema de gerenciamento de banco de dados (SGBD) semelhante a um banco de dados relacional, porém com um modelo de banco de dados orientado a objetos: objetos, classes e herança são suportadas diretamente nos esquemas do banco de dados e na linguagem de consulta. Além disso, ele suporta extensão do modelo de dados com a personalização de tipos de dados e métodos.

Banco de dados Objeto:
Um banco de dados orientado a objetos é um banco de dados em que cada informação é armazenada na forma de objetos, ou seja, utiliza a Estrutura de dados denominada Orientação a objetos, a qual permeia as linguagens mais modernas, começou a ser comercialmente viável em 1980 . O gerenciador do banco de dados para um orientado a objeto é referenciado por vários como ODBMS ou OODBMS.
Existem dois fatores principais que levam a adoção da tecnologia de banco de dados orientados a objetos. A primeira, é que em um banco de dados relacional se torna difícil de manipular com dados complexos (esta dificuldade se dá pois o modelo relacional se baseia menos no senso comum relativo ao modelo de dados necessário ao projeto e mais nas contingências práticas do armazenamento eletrônico). Segundo, os dados são geralmente manipulados pela aplicação escrita usando linguagens de programação orientada a objetos, como C++, C#, Java,Python ou Delphi (Object Pascal), e o código precisa ser traduzido entre a representação do dado e as tuplas da tabela relacional, o que além de ser uma operação tediosa de ser escrita, consome tempo. Esta perda entre os modelos usados para representar a informação na aplicação e no banco de dados é também chamada de “perda por resistência”


2- Entidade na abordagem relacional:
Tradução de entidades é razoavelmente óbvia: uma entidade gera uma tabela. Cada atributo da entidade gera uma coluna e os atributos identificadores da entidade tornam-se chave primária. Essa é uma tradução inicial. No decorrer da transformação entre modelos, algumas tabelas ainda poderão ser fundidas ou divididas.


3- Exemplos de entidade:
Tem-se a entidade Pessoa com os atributos: Código, Nome, Endereço e Data de Nascimento. Código é o atributo identificador. Tabela: Pessoa – Campos: CodPessoa, NomePess, EnderecoPess, DataNascPes


4- Classifique as entidades:	
Entidades fortes: são aquelas cuja existência independe de outras entidades, ou seja, por si só elas já possuem total sentido de existir. Em um sistema de vendas, a entidade produto, por exemplo, independe de quaisquer outras para existir.
Entidades fracas: ao contrário das entidades fortes, as fracas são aquelas que 	dependem de outras entidades para existirem, pois individualmente elas não fazem sentido. Mantendo o mesmo exemplo, a entidade venda depende da entidade produto, pois uma venda sem itens não tem sentido.	
Entidades associativas: esse tipo de entidade surge quando há a necessidade de associar uma quantidade a um relacionamento existente. Na modelagem Entidade-Relacionamento não é possível que um relacionamento seja associado a uma entidade, então tornamos esse relacionamento uma entidade associativa, que a partir daí poderá se relacionar com outras entidades. Para melhor compreender esse conceito, tomemos como exemplo uma aplicação de vendas em que existem as entidades Produto e Venda, que se relacionam na forma muitos, uma vez que em uma venda pode haver vários produtos e um produto pode ser vendido várias vezes (no caso, unidades diferentes do mesmo produto). Em determinado momento, a empresa passou a entregar brindes para os clientes que comprassem um determinado produto. A entidade Brinde, então, está relacionada não apenas com a Venda, nem com o produto, mas sim com o item da venda, ou seja, com o relacionamento entre as duas entidades citadas anteriormente. Como não podemos associar a entidade Brinde com um relacionamento, criamos então a entidade associativa "Item da Venda", que contém os atributos identificadores das entidades Venda e Produto, além de informações como quantidade e número de série.

5- O que é um atributo na abordagem relacional? :
	Atributos são as características que descrevem cada entidade dentro do domínio. Por exemplo, um cliente possui nome, endereço e telefone. Durante a análise de requisitos, são identificados os atributos relevantes de cada entidade naquele contexto, de forma a manter o modelo o mais simples possível e consequentemente armazenar apenas as informações que serão úteis futuramente. Uma pessoa possui atributos pessoais como cor dos olhos, altura e peso, mas para um sistema que funcionará em um supermercado, por exemplo, estas informações dificilmente serão relevantes.

6. Exemplifique atributos.
    
    Sendo os atributos os “títulos” de cada item de dado, cabem como exemplos:
Nome
Telefone
Endereço
Idade
Número ID

7. O que é uma tupla na abordagem relacional?

Tupla (ou linha) em SGBDR corresponde a unidade isolada de seu atributo referente. Seria o valor “cru”, apenas o número ou nome.

8. O que é SGBD?

Sistema Gerenciador de Banco de Dados. Em linhas gerais, é o conglomerado de aplicações que permite a criação, leitura, manipulação e estruturação de dados.

9. Apresente 3 exemplos de SGBD e suas principais características.

Firebird - Completamente gratuito, sem qualquer tipo de limitação de uso, compatibilidade ACID, 
MongoDB - Código aberto, orientado a documentos, construído em C++ e formado por um conjunto de documentos da tipologia JSON, aninhamento em hierarquias de alta complexidade porém indexáveis.
MSAccess - Relacional, compatibilidade com PHP, vastidão de funções import e export que integra o Windows a outras plataformas.

10. Em TI, por que é importante o descolamento/desacoplamento?

O desacoplamento de um código de aplicação é essencial por facilitar e diminuir a possibilidade de falhas na manutenção do mesmo. Quanto mais desacoplado, menor é o grau de interligação direta entre módulos, significando assim que, caso um módulo seja editado, não necessariamente ele afetará os módulos adjacentes. Resumidamente falando, o desacoplamento dá independência aos módulos da aplicação.

11. O que é independência de dados?
R. É a capacidade de mudar a estrutura lógica ou física de um certo banco de dados sem ter que reprogramar os programas de aplicação.


12. O que é uma chave?
R. É uma coluna que distingue uma linha das demais dentro de uma tabela ou relaciona com outra tabela. São identificadores exclusivos de um registro.
13. Para que serve a linguagem SQL?
R. É um conjunto de comandos de manipulação de banco de dados utilizado para criar e manter a estrutura desse banco de dados, além de incluir, excluir, modificar e pesquisar informações nas tabelas dele. É uma linguagem de definição e manipulação de dados padrão ISO-ANSI para sistemas de gerenciamento de banco de dados relacionais


14. O que é GRANT e REVOKE em DCL?
R. GRANT = comando usado para fornecer acesso ou privilégios sobre os objetos de banco de dados para os usuários.
REVOKE = remove direitos de acesso do usuário ou privilégios para os objetos de banco de dados.
15. Qual a diferença entre sistemas de banco de dados e sistema gerenciador de banco de dados?
R. Banco de Dados (BD):
É um conjunto de dados estruturados que são confiáveis, coerentes e compartilhados por usuários que têm necessidades de informações diferentes.
É um conjunto de dados integrados destinados a atender às necessidades de uma comunidade de usuários.
Sistema Gerenciador de Banco de Dados (SGBD): 
É uma coleção de programas que permite aos usuários criar e manter um banco de dados (Navathe).
Um SGBD é constituído por um conjunto de dados associados a um conjunto de programas para acesso a esses dados (Slberschatz).
Um SGBD é um software que incorpora as funções de definição, recuperação e alteração de dados em um banco de dados (Carlos Heuser).
Sistema de Banco de Dados = BD + SGBD
O banco de dados (BD) e o software de gerenciamento de banco de dados (SGBD) compõem o chamado Sistema de Banco de Dados.

16. Qual a diferença entre sistema de banco de dados e sistema de gerenciador de banco de dados?
Banco de Dados (BD):
É um conjunto de dados estruturados que são confiáveis coerentes e 	compartilhados por usuários que têm necessidades de informações 	diferentes.
É um conjunto de dados integrados destinados a atender às necessidades de uma comunidade de usuários.
Sistema Gerenciador de Banco de Dados (SGBD): 
É uma coleção de programas que permite aos usuários criar e manter um banco de dados (Navathe).
Um SGBD é constituído por um conjunto de dados associados a um conjunto de programas para acesso a esses dados (Slberschatz).
Um SGBD é um software que incorpora as funções de definição, 	recuperação e alteração de dados em um banco de dados (Carlos Heuser).

Sistema de Banco de Dados = BD + SGBD	
O banco de dados (BD) e o software de gerenciamento de banco de dados (SGBD) compõem o chamado Sistema de Banco de Dados.

17. Faça um diagrama que ilustra a resposta da questão anterior




18. Porque a linguagem SQL não é considerada uma linguagem procedural?
Essa linguagem é caracterizada como não-procedural porque linguagens procedurais geralmente precisam que detalhes das operações sejam especificados, tal como abertura e fechamento de tabelas, carregamento e busca ou flushing buffers e inscrição de dados para sistemas de arquivo. Contudo, SQL é considerada uma linguagem de alto nível, que abstrai o nível das operações realizadas e a maneira como estas são realizadas.


19. Como instalar um SGBD em sistema operacional?
Um sistema de gerenciamento de banco de dados implica a criação e manutenção de bases de dados, elimina a necessidade de especificação de definição de dados, age como interface entre os programas de aplicação e os ficheiros de dados físicos e separa as visões lógica e de concepção dos dados

20. O que é Clustering?
Clustering é uma técnica de Data Mining para fazer agrupamentos automáticos de dados segundo seu grau de semelhança. O critério de semelhança faz parte da definição do problema e, dependendo, do algoritmo.
O procedimento de Clustering também pode ser aplicado a bases de texto utilizando algoritmos de Text Mining, onde o algoritmo procura agrupar textos que falem sobre o mesmo assunto e separar textos de conteúdo diferentes.
Normalmente o usuário do sistema deve escolher a priori o número de grupos a serem detectados. Alguns algoritmos mais sofisticados pedem apenas o número mínimo, outros têm a capacidade de subdividir um grupo em dois.
Os tipos de algoritmos de agrupamento de dados mais comuns são os: Particionais e os Hierárquicos.
